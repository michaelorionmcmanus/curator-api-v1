service: curator-v1

plugins:
  - serverless-plugin-cfauthorizer

provider:
  name: aws
  runtime: python2.7
  region: us-west-2
  stage: dev
  profile: ${opt:profile}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-west-2:*:*"

custom:
  cfAuthorizers:
    CognitoAuthorizer:
      Type: "COGNITO_USER_POOLS"
      Name: "CognitoUserPoolAuthorizer"
      IdentitySource: "method.request.header.Authorization"
      ProviderARNs:
        - "arn:aws:cognito-idp:us-west-2:818443719598:userpool/us-west-2_1lUUc3IqG"

functions:
  AccountsController:
    handler: run.accounts_controller
    events:
      - http:
         path: accounts
         method: get
         cors: true
         integration: lambda-proxy
         cfAuthorizer: CognitoAuthorizer
        #  authorizer:
        #    arn: arn:aws:lambda:us-west-2:818443719598:function:sls-v05-cognito-authorizer
      - http:
         path: accounts
         method: post
         cors: true
         integration: lambda-proxy
         cfAuthorizer: CognitoAuthorizer
# you can add CloudFormation resource templates here
resources:
  Resources:
    AccountsTable: ${file(./schemas/dynamo/accounts.yml)}
    AccountsUsersTable: ${file(./schemas/dynamo/accounts-users.yml)}
  # Outputs:
  #   NewOutput:
  #     Description: "Description for the output"
  #     Value: "Some output value"

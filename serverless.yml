# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!
service: curator-v1

provider:
  name: aws
  runtime: python2.7
  region: us-west-2
  stage: dev

# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"

# you can add packaging information here
#package:
#  exclude:
#    - exclude-me.js
#  artifact: my-service-code.zip

functions:
  hello:
    handler: app/functions/accounts-manager/handler.handler
#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
    events:
      - http:
         path: accounts
         method: get
         cors: true
         integration: lambda-proxy
         authorizer:
           arn: arn:aws:lambda:us-west-2:818443719598:function:sls-v05-cognito-authorizer
    #  - s3: ${env:BUCKET}
    #  - schedule: rate(10 minutes)
    #  - sns: greeter-topic
    #  - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000

# you can add CloudFormation resource templates here
resources:
  Resources:
    AccountsTable: ${file(./schemas/dynamo/accounts.yml)}
      # Type: "AWS::DynamoDB::Table"
      # Properties:
      #   TableName: ${self:service}-${opt:stage, self:provider.stage}-accounts
      #   AttributeDefinitions:
      #     - AttributeName: owner_id
      #       AttributeType: S
      #     - AttributeName: id
      #       AttributeType: S
      #     - AttributeName: created
      #       AttributeType: N
      #   KeySchema:
      #     - AttributeName: owner_id
      #       KeyType: HASH
      #     - AttributeName: id
      #       KeyType: RANGE 
      #   LocalSecondaryIndexes:
      #     - KeySchema: 
      #         - AttributeName: owner_id
      #           KeyType: HASH
      #         - AttributeName: created
      #           KeyType: RANGE
      #       IndexName: created-index
      #       Projection:
      #         ProjectionType: ALL
      #   ProvisionedThroughput:
      #     ReadCapacityUnits: 5
      #     WriteCapacityUnits: 5
  # Outputs:
  #   NewOutput:
  #     Description: "Description for the output"
  #     Value: "Some output value"
